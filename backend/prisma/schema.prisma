generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  email          String     @unique
  password       String
  name           String
  role           Role       @default(ADMIN)
  isActive       Boolean    @default(true)
  lastLogin      DateTime?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  blogPosts      BlogPost[]
  createdContent Content[]

  @@map("users")
}

model BlogPost {
  id             String     @id @default(cuid())
  title          String
  slug           String     @unique
  content        String
  excerpt        String?
  featured       Boolean    @default(false)
  status         BlogStatus @default(DRAFT)
  publishedAt    DateTime?
  seoTitle       String?
  seoDescription String?
  featuredImage  String?
  images         String[]
  readTime       Int?
  views          Int        @default(0)
  tags           String[]
  category       String?
  authorId       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  author         User       @relation(fields: [authorId], references: [id])

  @@map("blog_posts")
}

model Content {
  id          String   @id @default(cuid())
  page        String
  section     String
  key         String
  type        String
  value       String
  metadata    Json?
  updatedById String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedBy   User     @relation(fields: [updatedById], references: [id])

  @@unique([page, section, key])
  @@map("content")
}

model Media {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  path         String
  url          String
  mimeType     String
  size         Int
  alt          String?
  caption      String?
  width        Int?
  height       Int?
  metadata     Json?
  usageCount   Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("media")
}

model AuditLog {
  id         String   @id @default(cuid())
  userId     String?
  action     String
  entityType String
  entityId   String?
  oldValues  Json?
  newValues  Json?
  ipAddress  String?
  userAgent  String?
  timestamp  DateTime @default(now())

  @@map("audit_logs")
}

enum Role {
  ADMIN
  SUPER_ADMIN
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
